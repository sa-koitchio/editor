<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
depth = -999

prefab[0,0] = obj_player
prefab[1,0] = obj_platform
prefab[2,0] = obj_enemy_basic
prefab[3,0] = obj_enemy_magicResistant
prefab[4,0] = obj_enemy_physicResistant
prefab[5,0] = obj_lampion
prefab[6,0] = obj_cartridge
prefab[7,0] = obj_finish
prefab[8,0] = obj_spikes

prefab[0,1] = "player"
prefab[1,1] = "platform"
prefab[2,1] = "basic enemy"
prefab[3,1] = "magic res. enemy"
prefab[4,1] = "physic res. enemy"
prefab[5,1] = "lampion"
prefab[6,1] = "cartridge"
prefab[7,1] = "finish"
prefab[8,1] = "spikes"


prefab[0,2] = spr_player_idle
prefab[1,2] = spr_gui_platform
prefab[2,2] = spr_enemy_idle
prefab[3,2] = spr_enemy_idle
prefab[4,2] = spr_enemy_idle
prefab[5,2] = spr_lampion
prefab[6,2] = spr_cassette
prefab[7,2] = spr_finish
prefab[8,2] = spr_spikes


prefabIndex = 0

showGrid = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_wheel_up())
{
    prefabIndex -= 1
}
if(mouse_wheel_down())
{
    prefabIndex += 1
}

prefabIndex = clamp(prefabIndex,0,array_height_2d(prefab)-1);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// place objects

if(mouse_check_button_pressed(mb_right))
{
    instance_create(mouse_x,mouse_y,prefab[prefabIndex,0])
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// activate grid
if(keyboard_check_pressed(ord("G")))
{
    showGrid = !showGrid
}

if(keyboard_check_pressed(ord("R")))
{
    room = rm_baseRoom
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dx = 32;
var dy = 32;
var pd = 34;

for(var i = 0;i &lt; array_height_2d(prefab); i++)
{
    draw_sprite(prefab[i,2],0,dx+pd*i,dy);
    draw_sprite(spr_slot,0,dx+pd*i,dy)
}

draw_sprite_ext(spr_slot,0,dx+pd*prefabIndex,dy,1.1,1.1,0,c_white,1)

draw_set_font(fnt_button)
draw_set_halign(fa_center)
draw_text(room_width/2,64,prefab[prefabIndex,1])
draw_set_halign(-1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Grid
draw_text(0,room_height-16,"LMB: Drag objects|RMB: Create object|Hold Shift &amp; hover to delete objects")
if(showGrid)
{
draw_set_alpha(0.3)
for(var i = 0;i&lt;room_width;i+= 16)
{
    
    draw_line(i,0,i,room_height)
}

for(var j = 0; j &lt; room_height; j+= 16)
{
        draw_line(0,j,room_width,j)
}
draw_set_alpha(1)
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// notificaton if not focused

if(!window_has_focus())
{
    draw_set_color(c_black)
    draw_set_alpha(0.5)
    draw_rectangle(0,0,room_width,room_height,false)
    draw_set_alpha(1)
    
    draw_set_color(c_red)
    draw_set_font(fnt_focus)
    draw_set_halign(fa_center)
    draw_text(room_width/2,room_height/2,"Window not focused#(alt+tab to select)")
    draw_set_halign(fa_left)
    draw_set_color(c_white)
    draw_set_font(fnt_button)
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
